//state machine stuff
enum State_enum {ON, OFF, RUN, SLEEP, DIAGNOSTIC};
// enum Sensors_enum {NONE, SENSOR_RIGHT, SENSOR_LEFT, BOTH};
void stateUpdate();


void on();
void off();
void run1();
void sleep();
void diagnostic();
uint8_t read_IR();
uint8_t state = OFF;
bool switch_1_pressed();
bool switch_2_pressed();
bool switch_3_pressed();
bool switch1;
bool switch2;
bool switch3;
void state_machine_run();

//not state machine stuff
int RED_PIN = 13;
int GREEN_PIN = 10;
int BLUE_PIN = 9;
int SWITCH1 = 7;
int SWITCH2 = 6;
int SWITCH3 = 5;

int fadeAmount = 5;    // how many points to fade the LED by
unsigned long currentMillis();

void setup() {
  pinMode(RED_PIN, OUTPUT);
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(SWITCH1, INPUT_PULLUP);
  pinMode(SWITCH2, INPUT_PULLUP);
  pinMode(SWITCH3, INPUT_PULLUP);


  attachInterrupt(digitalPinToInterrupt(SWITCH1), stateUpdate, CHANGE);
  attachInterrupt(digitalPinToInterrupt(SWITCH2), stateUpdate, CHANGE);
  attachInterrupt(digitalPinToInterrupt(SWITCH3), stateUpdate, CHANGE);

}

void loop() {
  //put a millis variable here?

   state_machine_run();
 
}



void state_machine_run()
{
   


  
 switch(state)
 {
   case ON:
       if(!switch1 && !switch2 && switch3){
         off();
         state = OFF;
       }
       else if(!switch1 && switch2 && !switch3){
         run1();
         state = RUN;
       }
       else if(switch1 && !switch2 && !switch3){
         sleep();
         state = SLEEP;
       }
       else if(!switch1 && switch2 && switch3){
         diagnostic();
         state = DIAGNOSTIC;
       }
       break;
    case OFF:
         if(!switch1 && !switch2 && !switch3){
           on();
           state = ON;
         }
         break;
     case RUN:
         if(!switch1 && !switch2 && !switch3){
           on();
           state = ON;
         }
     break;
     case SLEEP:
         if(!switch1 && !switch2 && !switch3){
           on();
           state = ON;
         }
     break;
     case DIAGNOSTIC:
         if(!switch1 && !switch2 && switch3){
           on();
           state = ON;
         }
     break;
 
 }
}



void on()
{
    //red led
    digitalWrite(RED_PIN, HIGH);   // turn the LED on (HIGH is the voltage level)

    int delay_time = 100;
    unsigned long time_now = millis();
    while(delay_time > millis() - time_now){}
         //delay(100);
      digitalWrite(RED_PIN, LOW);    // turn the LED off by making the voltage LOW
      //} //wait for 100 ms


    
}

void off()
{
  //led off logic
}


//green led
void run1()
{
    int brightness = analogRead(A1) / 4;
    
    int delay_time = 100;
    unsigned long time_now = millis();
    
  
    if(analogRead(A0) > 500){
        for(int i = 0; i < 10; i++){
          analogWrite(GREEN_PIN, brightness);   // turn the LED on (HIGH is the voltage level)
          time_now = millis();
          while(delay_time > millis() - time_now){}
          analogWrite(GREEN_PIN, 0);    // turn the LED off by making the voltage LOW
          time_now = millis();
          while(delay_time > millis() - time_now){}
        }
    }
    else{
        fade_led(6, GREEN_PIN);
   
        for(int i = 0; i < 2; i++){
          analogWrite(GREEN_PIN, brightness);   // turn the LED on (HIGH is the voltage level)
          time_now = millis();
          while(delay_time > millis() - time_now){}                       // wait for a second
          analogWrite(GREEN_PIN, brightness);    // turn the LED off by making the voltage LOW
          while(delay_time > millis() - time_now){}
          time_now = millis();
        }   
 
       
    }
}

void sleep()
{
     //led sleep logic
    flash_led(3, BLUE_PIN);


    //FADE CODE
    fade_led(6, BLUE_PIN);
}

void flash_led(int flashes, int LED)
{
    int delaytime = 1000/flashes;
    for (int i = 0; i<flashes;i++)
    {
      digitalWrite(LED, HIGH);   // turn the LED on (HIGH is the voltage level)
      delay(delaytime);                       // wait for a second
      digitalWrite(LED, LOW);    // turn the LED off by making the voltage LOW
      delay(delaytime);
    }
}

void fade_led(int fade_time, int LED)
{
      int brightness = 255;
      int delay_time = 100;
      unsigned long time_now = millis();
      
      while(brightness >= 0 ){
       analogWrite(LED, brightness); 
       brightness = brightness - 5; 
       time_now = millis();    
       while(delay_time > millis() - time_now){}
     }
}


//led diagnostic logic
void diagnostic()
{
      int problems = 4;
      flash_led(problems, RED_PIN);
}

uint8_t read_IR()
{
    //gets sensor/ user input
}

bool switch_1_pressed()
{
  return digitalRead(SWITCH1);
}
bool switch_2_pressed()
{
  return digitalRead(SWITCH2);
}
bool switch_3_pressed()
{
  return digitalRead(SWITCH3);
}

void stateUpdate(){
   switch1 = switch_1_pressed();
   switch2 = switch_2_pressed();
   switch3 = switch_3_pressed();
  
  if(!switch1, !switch2, !switch3)state = ON;
  if(!switch1, !switch2, switch3)state = OFF;
  if(!switch1 && switch2 && !switch3)state = RUN;
  if(switch1 && !switch2 && !switch3)state = SLEEP;
  if(!switch1 && switch2 && switch3)state = DIAGNOSTIC;
}

